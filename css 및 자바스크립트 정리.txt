<!doctype html>
<html>
<head>
	<title>WEB</title>
	<meta charset = "utf-8">
	<style>
		a {
			color:red;
		}
	</style>
</head>
</html>

css 사용방법
<head></head>안에 <style></style> 태그를 사용한다(<style>a { color:red; } </style>
style= 속성을 사용한다 (<a style="color:red">)

property
color:red;(글자색)
text-decoration:underline;(글자서식)
font-size:100px;(폰트 크기)
text-align:center;(텍스트 정렬)

selector(선택자)
class="클래스이름" (class="saw") #선언할때 앞에 .을 찍어준다
<style>
	.saw {
	color:gray;
	}
</style>

class 는 여러가지가 들어갈수 있고 뛰어쓰기로 구분한다
class="saw active"
.saw
.active

하지만 뒤에 선언한 클래스가 이긴다

그래서
id="active"를 해주고
#active
일 경우 앞에 있든 뒤에 있든 id가 class를 이긴다
id는 하나의 값만 선언할 수 있다.(id="active"를 했다면 다른곳에서 id="active" 안됨, id="active2"는 됨)

id > class > tag 선택자 우선순위

<div> 블록
<span> 인라인

grid를 하려면 부모<div> 안에 2개의 <div>가 존재하여야 하며
부모<div>에 id 선택자를 주고
display:grid;
grid-template-columns:150px 1fr;	@fr은 전체블록을 앞숫자만큼 분법해주는것이다.
같이 설정 해준다.

반응형웹
@미디어쿼리
@media(min-width:800px){		<- min-width = screen > 800px
				    max-width = scrren < 800px
        div{
          display:none;
        }
      }

@css 파일에 <style></style> 사이에 값들을 저장해주고
<style></style> 을 다 지워주고
<link rel="stylesheet" href="저장한css파일명">을 입력해주면
알아서 css파일에 들어있는 스타일들을 가져와준다.
css파일만 바꿔주면 링크 된 모든 웹페이지의 스타일을 바꿔주므로 편리해진다.

자바스크립트
#주간모드,야간모드(각각 버튼)
  <input type="button" value="night" onclick="
    document.querySelector('body').style.backgroundColor = 'black';
    document.querySelector('body').style.color = 'white';
  ">
  <input type="button" value="day" onclick="
    document.querySelector('body').style.backgroundColor='white';
    document.querySelector('body').style.color = 'black';
  ">

#토글(다크모드 버튼 하나로)  

  <input id="night_day" type="button" value="다크모드" onclick="
    if(document.querySelector('#night_day').value === '다크모드'){
      document.querySelector('body').style.backgroundColor='black';
      document.querySelector('body').style.color='white';
      document.querySelector('#night_day').value = '화이트모드';
    } else {
      document.querySelector('body').style.backgroundColor='white';
      document.querySelector('body').style.color='black';
      document.querySelector('#night_day').value = '다크모드';
    }
  ">

#리팩토링 : 비효율적인 코드를 효율적으로 수정하여 가독성을 높이는 등 개선하는 작업

  <input type="button" value="다크모드" onclick="
    var target = document.querySelector('body');		//document.querySelector('body')를 변수처리
    if(this.value === '다크모드'){
      target.style.backgroundColor='black';
      target.style.color='white';
      this.value = '라이트모드';
    } else {
      target.style.backgroundColor='white';
      target.style.color='black';
      this.value = '다크모드';
    }
  ">

#자바스크립트 배열
  <body>
    <h1>Array</h1>
      <h2>Syntax</h2>
      <script>
        var coworkers = ["egoing", "leezche"];
      </script>

      <h2>get</h2>	//배열 인덱싱
      <script>
        document.write(coworkers[0]);
        document.write(coworkers[1]);
      </script>

      <h2>add</h2>	//배열 추가
      <script>
        coworkers.push('duru');
        coworkers.push('taeho');
      </script>

      <h2>count</h2>	//배열 갯수세기
      <script>
        document.write(coworkers.length);
      </script>
  </body>

#반복문
  <body>
    <h1>Loop</h1>
    <ul>
    <script>
      document.write('<li>1</li>');
      var i = 0;
      while(i<3){
        document.write('<li>2</li>');
        document.write('<li>3</li>');
        i = i + 1;
      }
      document.write('<li>4</li>');
    </script>
    </ul>
  </body>

#배열과 반복문
  <body>
    <h1>Loop & Array</h1>
    <script>
      var coworkers = ['egoing','leezche','duru','taeho','graphittie'];
    </script>
      <h2>Co workers</h2>
      <ul>
        <script>
          var i = 0;
          while(i<coworkers.length){		//반복횟수를 coworkers.length으로 지정함으로써 배열 변화에 따라 반영하도록 해줌
            document.write('<li>'+coworkers[i]+'</li>');
            i = i+1;
        }
        </script>
      </ul>
  </body>

#배열과 반복문의 활용(다크모드)
  <input type="button" value="다크모드" onclick="
    var target = document.querySelector('body');
    var alist = document.querySelectorAll('a');
    var i = 0;

    if(this.value === '다크모드'){
      target.style.backgroundColor='black';
      target.style.color='white';
      this.value = '라이트모드';

      while(i < alist.length){
        alist[i].style.color = 'powderblue';
        i = i+1;
      }
    } else {
      target.style.backgroundColor='white';
      target.style.color='black';
      this.value = '다크모드';

      while(i < alist.length){
        alist[i].style.color = 'blue';
        i = i+1;
      }
    }
  ">

#함수
<head>
  <script>
    function nightDayHandler(self){
    var target = document.querySelector('body');
    var alist = document.querySelectorAll('a');
    var i = 0;
    if(self.value === '다크모드'){
      target.style.backgroundColor='black';
      target.style.color='white';
      self.value = '라이트모드';

      while(i < alist.length){
        alist[i].style.color = 'powderblue';
        i = i+1;
      }
    }
    else {
      target.style.backgroundColor='white';
      target.style.color='black';
      self.value = '다크모드';

      while(i < alist.length){
        alist[i].style.color = 'blue';
        i = i+1;
      }
    }
  }
  </script>
</head>

<body>
  <input type="button" value="다크모드" onclick="
    nightDayHandler(this);		//위에서 지정한 nightDayHandler함수를 호출(this값을 넣어서)
  ">
</body>

#함수의 매개변수와 인자 그리고 Return
  <body>
    <h1>Function</h1>
    <h2>Basic</h2>
    <ul>
      <script>
        function two(){
          document.write('<li>2-1</li>');
          document.write('<li>2-2</li>');
        }
        document.write('<li>1</li>');
        two();
        document.write('<li>3</li>');
        two();
      </script>
    </ul>
    <h2>Parameter & Argument</h2>
    <script>
      function onePlusOne(){
        document.write(1+1+'<br>');
      }
      onePlusOne();
      function sum(left, right){    //매개변수(Parameter) - 입력(left,right)
        document.write(left+right+'<br>');
      }
      function sumColorRed(left, right){
        document.write('<div style="color:red">'+left+right+'</div><br>');
      }
      sum(2,3); //인자(Argument) - 2,3
      sumColorRed(2,3);
      sum(3,4); //인자(Argument) - 3,4
    </script>
    <h2>Return</h2>
    <script>
      function sum2(left,right){
        return left+right;
      }
      document.write(sum2(2,3)+'<br>');
      document.write('<div style="color:red">'+sum2(2,3)+'</div>');
      document.write('<div style="font-size:3rem;">'+sum2(2,3)+'</div>');
    </script>
  </body>

#객체(Object)
*객체 쓰기와 읽기
객체에 속해 있는 함수 = 메소드
배열을 만들때는 []
객체를 만들때는 {}

  <body>
    <h1>Object</h1>
    <h2>Create</h2>
    <script>
      var coworkers = {
        "programmer":"egoing",
        "designer":"leezche"
      };
      document.write("programmer : "+coworkers.programmer+"<br>");
      document.write("designer : "+coworkers.designer+"<br>");
      coworkers.bookkeeper = "duru";			//객체에 추가하기
      document.write("bookkeeper : "+coworkers.bookkeeper+"<br>");
      coworkers["data scientist"] = "taeho";		//객체에 띄어쓰기를 포함하여 추가하려면 객체[""]를 사용하면 된다.
      document.write("data scientist : "+coworkers["data scientist"]+"<br>");
    </script>
  </body>

*객체의 반복문
    <h2>Iterate</h2>
    <script>
      for(var key in coworkers){
        document.write(key+" : "+coworkers[key]+"<br>");
      }
    </script>

*객체에 소속된 함수 만들기(메소드)
    <h2>Property & Method</h2>
    <script>
      coworkers.showAll = function(){
        for(var key in this){
          document.write(key+" : "+this[key]+"<br>");
        }
      }
      coworkers.showAll();
    </script>

*객체의 활용
<head>
  <script>
    var Links = {
      setColor:function(color){
        var alist = document.querySelectorAll('a');
        var i = 0;
        while(i < alist.length){
          alist[i].style.color = color;
          i = i+1;
        }
      }
    }
    var Body = {
      setColor:function(color){
        document.querySelector('body').style.color=color;
      },
      setBackgroundColor:function(color){
        document.querySelector('body').style.backgroundColor=color;
      }
    }

#jquery(자바스크립트 중 대표적인 라이브러리)
<head></head>안에
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>를 추가하고

    $('a').css('color', color);
    $('body').css('color', color);
    $('body').css('backgroundColor', color);

와 같이 사용한다.

#UI(User Interface)

#API(Application Programming Interface)

#documnet

#DOM

#window